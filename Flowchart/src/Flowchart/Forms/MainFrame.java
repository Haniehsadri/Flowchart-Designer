/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Flowchart.Forms;

import Flowchart.*;
import Flowchart.Forms.VirtualMachine.VirtualMachine;
import Flowchart.Manager.ShapesManager;
import Flowchart.Motevaziyolazlah;
import Flowchart.Oval;
import Flowchart.Rectangle;
import java.awt.Color;
import java.awt.Container;
import java.awt.Graphics;
import java.awt.Panel;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author sony
 */
public class MainFrame extends javax.swing.JFrame {

    public static int code = 1;
    public static int flag1 = 0;
    public static int flag3 = 0;
    int flag4 = 0;
    Input input = new Input(null, true);
    Shape shape3;
    Shape deleted;
    ArrayList<Shape> SellectedShapes = new ArrayList<Shape>();
    int x3, y3;
    int i = 0;

    @Override
    public Container getContentPane() {
        return super.getContentPane(); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        rectangle = new javax.swing.JToggleButton();
        oval = new javax.swing.JToggleButton();
        khorooji = new javax.swing.JToggleButton();
        sharti = new javax.swing.JToggleButton();
        voroodi = new javax.swing.JToggleButton();
        paintpanel = new javax.swing.JPanel();
        khorooj = new javax.swing.JButton();
        link = new javax.swing.JToggleButton();
        eslah = new javax.swing.JToggleButton();
        move = new javax.swing.JToggleButton();
        delete = new javax.swing.JToggleButton();
        save = new javax.swing.JButton();
        load = new javax.swing.JButton();
        IsCurrect = new javax.swing.JButton();
        run = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        result = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1300, 740));

        rectangle.setBackground(new java.awt.Color(0, 255, 0));
        buttonGroup1.add(rectangle);
        rectangle.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        rectangle.setText("Rectangle");
        rectangle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rectangleActionPerformed(evt);
            }
        });

        oval.setBackground(new java.awt.Color(255, 255, 0));
        buttonGroup1.add(oval);
        oval.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        oval.setText("Ellipse");
        oval.setToolTipText("");
        oval.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ovalActionPerformed(evt);
            }
        });

        khorooji.setBackground(new java.awt.Color(255, 255, 0));
        buttonGroup1.add(khorooji);
        khorooji.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        khorooji.setText("Output");
        khorooji.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                khoroojiActionPerformed(evt);
            }
        });

        sharti.setBackground(new java.awt.Color(0, 255, 0));
        buttonGroup1.add(sharti);
        sharti.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        sharti.setText("Conditional");

        voroodi.setBackground(new java.awt.Color(0, 255, 0));
        buttonGroup1.add(voroodi);
        voroodi.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        voroodi.setText("Input");
        voroodi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voroodiActionPerformed(evt);
            }
        });

        paintpanel.setBackground(new java.awt.Color(255, 255, 255));
        paintpanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 255), 10));
        paintpanel.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        paintpanel.setPreferredSize(new java.awt.Dimension(830, 670));
        paintpanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                paintpanelMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                paintpanelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                paintpanelMouseReleased(evt);
            }
        });
        paintpanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                paintpanelMouseDragged(evt);
            }
        });
        paintpanel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                paintpanelKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout paintpanelLayout = new javax.swing.GroupLayout(paintpanel);
        paintpanel.setLayout(paintpanelLayout);
        paintpanelLayout.setHorizontalGroup(
            paintpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 810, Short.MAX_VALUE)
        );
        paintpanelLayout.setVerticalGroup(
            paintpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 650, Short.MAX_VALUE)
        );

        khorooj.setBackground(new java.awt.Color(255, 102, 102));
        khorooj.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        khorooj.setText("Exit");
        khorooj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                khoroojActionPerformed(evt);
            }
        });

        link.setBackground(new java.awt.Color(255, 255, 0));
        buttonGroup1.add(link);
        link.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        link.setText("Link");
        link.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                linkActionPerformed(evt);
            }
        });

        eslah.setBackground(new java.awt.Color(0, 255, 0));
        buttonGroup1.add(eslah);
        eslah.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        eslah.setText("Edit a component");

        move.setBackground(new java.awt.Color(255, 255, 0));
        buttonGroup1.add(move);
        move.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        move.setText("Move some components");
        move.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(0, 255, 0));
        buttonGroup1.add(delete);
        delete.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        delete.setText("Remove components");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        delete.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                deleteKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                deleteKeyTyped(evt);
            }
        });

        save.setBackground(new java.awt.Color(0, 255, 0));
        save.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        save.setForeground(new java.awt.Color(0, 51, 51));
        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        load.setBackground(new java.awt.Color(255, 255, 0));
        load.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        load.setText("Load");
        load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadActionPerformed(evt);
            }
        });

        IsCurrect.setBackground(new java.awt.Color(0, 255, 0));
        IsCurrect.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        IsCurrect.setText("Is a correct flowchart?");
        IsCurrect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IsCurrectActionPerformed(evt);
            }
        });

        run.setBackground(new java.awt.Color(255, 255, 0));
        run.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        run.setText("Run the flowchart");
        run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Result");

        result.setColumns(20);
        result.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        result.setRows(5);
        jScrollPane1.setViewportView(result);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "         name", "         value"
            }
        ));
        jScrollPane2.setViewportView(table);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("variables");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(rectangle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(oval, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(voroodi, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(khorooji, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sharti, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(khorooj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(link, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(eslah, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(move, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paintpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(save, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                                    .addComponent(load, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(IsCurrect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(run, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 78, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(108, 108, 108))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(load, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(IsCurrect, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(run, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(20, Short.MAX_VALUE)
                        .addComponent(paintpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(rectangle, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(oval, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(voroodi, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(khorooji, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(sharti, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(link, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(eslah, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(move, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(khorooj, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(67, 67, 67))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void khoroojiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_khoroojiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_khoroojiActionPerformed

    private void rectangleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rectangleActionPerformed

    }//GEN-LAST:event_rectangleActionPerformed

    private void paintpanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paintpanelMouseClicked
        if (rectangle.isSelected() && !ShapesManager.shapemanager.PrevationOverlap(evt.getX(), evt.getY())) {
            flag1 = 0;

            input.label1.setText("width:");
            input.x.setText(String.valueOf(evt.getX()));
            input.y.setText(String.valueOf(evt.getY()));
            input.width.setText(String.valueOf(60));
            input.length.setText(String.valueOf(130));
            input.code.setText("");
            input.setVisible(true);
            if (flag1 == 1) {
                Rectangle rectangle = new Rectangle(code++, Integer.parseInt(input.length.getText()), Integer.parseInt(input.width.getText()), Integer.parseInt(input.x.getText()), Integer.parseInt(input.y.getText()), input.code.getText());
                rectangle.basexcenter = Integer.parseInt(input.x.getText());
                rectangle.baseycenter = Integer.parseInt(input.y.getText());
                ShapesManager.shapemanager.getDrawableList().add(rectangle);
                ShapesManager.shapemanager.getShapeList().add(rectangle);
                ShapesManager.shapemanager.DrawAll(this.paintpanel.getGraphics());
            }
        }
        if (oval.isSelected() && !ShapesManager.shapemanager.PrevationOverlap(evt.getX(), evt.getY())) {
            flag1 = 0;

            input.label1.setText("height:");
            input.x.setText(String.valueOf(evt.getX()));
            input.y.setText(String.valueOf(evt.getY()));
            input.width.setText(String.valueOf(60));
            input.length.setText(String.valueOf(130));
            input.code.setText("");
            input.setVisible(true);
            if (flag1 == 1) {
                Oval oval = new Oval(code++, Integer.parseInt(input.length.getText()), Integer.parseInt(input.width.getText()), Integer.parseInt(input.x.getText()), Integer.parseInt(input.y.getText()), input.code.getText());
                oval.basexcenter = Integer.parseInt(input.x.getText());
                oval.baseycenter = Integer.parseInt(input.y.getText());
                ShapesManager.shapemanager.getDrawableList().add(oval);
                ShapesManager.shapemanager.getShapeList().add(oval);
                ShapesManager.shapemanager.DrawAll(this.paintpanel.getGraphics());
            }
        }
        if (voroodi.isSelected() || khorooji.isSelected()) {
            if (!ShapesManager.shapemanager.PrevationOverlap(evt.getX(), evt.getY())) {
                flag1 = 0;

                input.label1.setText("height:");
                input.x.setText(String.valueOf(evt.getX()));
                input.y.setText(String.valueOf(evt.getY()));
                input.width.setText(String.valueOf(60));
                input.length.setText(String.valueOf(130));
                input.code.setText("");
                input.setVisible(true);
                if (flag1 == 1) {
                    Motevaziyolazlah voroodi = new Motevaziyolazlah(code++, Integer.parseInt(input.length.getText()), Integer.parseInt(input.width.getText()), Integer.parseInt(input.x.getText()), Integer.parseInt(input.y.getText()), input.code.getText());
                    voroodi.basexcenter = Integer.parseInt(input.x.getText());
                    voroodi.baseycenter = Integer.parseInt(input.y.getText());
                    ShapesManager.shapemanager.getDrawableList().add(voroodi);
                    ShapesManager.shapemanager.getShapeList().add(voroodi);
                    ShapesManager.shapemanager.DrawAll(this.paintpanel.getGraphics());
                }
            }
        }
        if (sharti.isSelected() && !ShapesManager.shapemanager.PrevationOverlap(evt.getX(), evt.getY())) {
            flag1 = 0;

            input.label1.setText("height:");
            input.x.setText(String.valueOf(evt.getX()));
            input.y.setText(String.valueOf(evt.getY()));
            input.width.setText(String.valueOf(90));
            input.length.setText(String.valueOf(140));
            input.code.setText("");
            input.setVisible(true);
            if (flag1 == 1) {
                Lozi sharti = new Lozi(code++, Integer.parseInt(input.length.getText()), Integer.parseInt(input.width.getText()), Integer.parseInt(input.x.getText()), Integer.parseInt(input.y.getText()), input.code.getText());
                sharti.basexcenter = Integer.parseInt(input.x.getText());
                sharti.baseycenter = Integer.parseInt(input.y.getText());
                ShapesManager.shapemanager.getDrawableList().add(sharti);
                ShapesManager.shapemanager.getShapeList().add(sharti);
                ShapesManager.shapemanager.DrawAll(this.paintpanel.getGraphics());
            }
        }
        if (link.isSelected()) {
            int flag2 = ShapesManager.shapemanager.AddLink(evt.getX(), evt.getY(), code);
            if (flag2 == 2) {
                code++;
                ShapesManager.shapemanager.DrawAll(this.paintpanel.getGraphics());
            }

        }
        if (eslah.isSelected()) {
            ShapesManager.shapemanager.EditShape(evt.getX(), evt.getY(), this.paintpanel.getGraphics());

        }
        if (move.isSelected() || delete.isSelected()) {
            if (evt.isControlDown()) {
                Shape selected = ShapesManager.shapemanager.SearchShape(evt.getX(), evt.getY());
                if (selected != null) {
                    SellectedShapes.add(selected);
                    selected.basexcenter = evt.getX();
                    selected.baseycenter = evt.getY();
                }
            } else {
                SellectedShapes.clear();
            }
        }
        if (delete.isSelected()) {
            flag4 = 0;
            deleted = ShapesManager.shapemanager.SearchShape(evt.getX(), evt.getY());
            if (deleted != null) {
                flag4 = 1;
            }
        }
    }//GEN-LAST:event_paintpanelMouseClicked

    private void khoroojActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_khoroojActionPerformed
        System.exit(1);
    }//GEN-LAST:event_khoroojActionPerformed

    private void ovalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ovalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ovalActionPerformed

    private void voroodiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voroodiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_voroodiActionPerformed

    private void linkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_linkActionPerformed
        JOptionPane.showMessageDialog(this, "Click on the points of the start and the end");
    }//GEN-LAST:event_linkActionPerformed

    private void paintpanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paintpanelMouseDragged
        if (this.eslah.isSelected()) {
            if (shape3 != null) {
                ShapesManager.shapemanager.MoveShape(shape3, evt.getX(), evt.getY());
                shape3.basexcenter = evt.getX();
                shape3.baseycenter = evt.getY();
                Graphics g = this.paintpanel.getGraphics();
                g.setColor(Color.WHITE);
                g.fillRect(10, 10, 810, 650);
                ShapesManager.shapemanager.DrawAll(g);
            }
        }
        if (this.move.isSelected()) {
            if (shape3 != null) {

                for (Shape shape3 : SellectedShapes) {
                    ShapesManager.shapemanager.MoveShape(shape3, shape3.basexcenter + evt.getX() - x3, shape3.baseycenter + evt.getY() - y3);

                }
                Graphics g = this.paintpanel.getGraphics();
                g.setColor(Color.WHITE);
                g.fillRect(10, 10, 810, 650);
                ShapesManager.shapemanager.DrawAll(g);
            }
        }
    }//GEN-LAST:event_paintpanelMouseDragged

    private void paintpanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paintpanelMousePressed
        if (this.eslah.isSelected()) {
            shape3 = ShapesManager.shapemanager.SearchShape(evt.getX(), evt.getY());
        }
        if (move.isSelected()) {
            shape3 = ShapesManager.shapemanager.SearchShape(evt.getX(), evt.getY());
            if (shape3 != null) {
                x3 = evt.getX();
                y3 = evt.getY();
            }
        }
    }//GEN-LAST:event_paintpanelMousePressed

    private void paintpanelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paintpanelMouseReleased
        if (move.isSelected()) {
            for (Shape shape3 : SellectedShapes) {
                shape3.basexcenter = shape3.xcenter;
                shape3.baseycenter = shape3.ycenter;
            }
        }
    }//GEN-LAST:event_paintpanelMouseReleased

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        SellectedShapes.clear();
        JOptionPane.showMessageDialog(null, "after choosing components press Delete");
    }//GEN-LAST:event_deleteActionPerformed

    private void paintpanelKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_paintpanelKeyTyped

    }//GEN-LAST:event_paintpanelKeyTyped

    private void deleteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_deleteKeyReleased

    }//GEN-LAST:event_deleteKeyReleased

    private void deleteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_deleteKeyTyped
        for (Shape shape : SellectedShapes) {
            ShapesManager.shapemanager.getDrawableList().remove(shape);
            ShapesManager.shapemanager.getDrawableList().remove(shape.in);
            ShapesManager.shapemanager.getDrawableList().remove(shape.out);
            ShapesManager.shapemanager.getShapeList().remove(shape);
            flag4 = 0;
        }
        if (flag4 == 1) {
            ShapesManager.shapemanager.getDrawableList().remove(deleted);
            ShapesManager.shapemanager.getDrawableList().remove(deleted.in);
            ShapesManager.shapemanager.getDrawableList().remove(deleted.out);
            ShapesManager.shapemanager.getShapeList().remove(deleted);
            flag4 = 0;
        }

        Graphics g = this.paintpanel.getGraphics();
        g.setColor(Color.WHITE);
        g.fillRect(10, 10, 810, 650);
        ShapesManager.shapemanager.DrawAll(g);
        SellectedShapes.clear();
    }//GEN-LAST:event_deleteKeyTyped

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        String path = JOptionPane.showInputDialog("Enter the location:");
        if (path != null) {
            ShapesManager.shapemanager.SaveToFile(path);
        }
    }//GEN-LAST:event_saveActionPerformed

    private void loadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadActionPerformed
        String path = JOptionPane.showInputDialog("Enter the location:");
        if (path != null) {
            ShapesManager.shapemanager.Load(path, this.paintpanel.getGraphics());
        }
    }//GEN-LAST:event_loadActionPerformed

    private void moveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveActionPerformed
        SellectedShapes.clear();
    }//GEN-LAST:event_moveActionPerformed

    private void IsCurrectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IsCurrectActionPerformed
        if (ShapesManager.shapemanager.IsCurrect()) {
            JOptionPane.showMessageDialog(null, "Flowchart is correct");
        } else {
            JOptionPane.showMessageDialog(null, "Flowchart is not correct");
        }
    }//GEN-LAST:event_IsCurrectActionPerformed

    private void runActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runActionPerformed
        VirtualMachine v = new VirtualMachine();
        v.Run(this);
    }//GEN-LAST:event_runActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton IsCurrect;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JToggleButton delete;
    private javax.swing.JToggleButton eslah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton khorooj;
    private javax.swing.JToggleButton khorooji;
    public javax.swing.JToggleButton link;
    private javax.swing.JButton load;
    public javax.swing.JToggleButton move;
    private javax.swing.JToggleButton oval;
    public javax.swing.JPanel paintpanel;
    private javax.swing.JToggleButton rectangle;
    public javax.swing.JTextArea result;
    private javax.swing.JButton run;
    public javax.swing.JButton save;
    private javax.swing.JToggleButton sharti;
    public javax.swing.JTable table;
    private javax.swing.JToggleButton voroodi;
    // End of variables declaration//GEN-END:variables
}
